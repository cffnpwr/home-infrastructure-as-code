- name: Get Architecture
  changed_when: false
  ansible.builtin.command: dpkg --print-architecture
  register: arch

- name: Check Cilium CLI Installed
  failed_when: false
  changed_when: false
  ansible.builtin.command: which cilium
  register: cilium_cli_installed

- name: Install Cilium CLI
  when: cilium_cli_installed.rc != 0
  block:
    - name: Download Cilium CLI
      vars:
        # yamllint disable-line rule:line-length
        version: "{{ (cilium_cli_version | default((lookup('url', 'https://api.github.com/repos/cilium/cilium-cli/releases/latest') | from_json).tag_name)) | regex_replace('^v?(([0-9]+)\\\
          .([0-9]+)\\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+[0-9A-Za-z-]+)?)$', 'v\\1') }}"
      ansible.builtin.get_url:
        url: https://github.com/cilium/cilium-cli/releases/download/{{ version }}/cilium-linux-{{ arch.stdout }}.tar.gz
        dest: /tmp/cilium-cli.tar.gz
        mode: "644"

    - name: Extract Cilium CLI
      become: true
      ansible.builtin.unarchive:
        src: /tmp/cilium-cli.tar.gz
        dest: /usr/local/bin
        remote_src: true

- name: Check Cilium Installed
  failed_when: false
  changed_when: false
  ansible.builtin.command: cilium status -o json
  register: cilium_installed

- name: Install Cilium
  when: cilium_installed.stdout | from_json | dict2items | map(attribute='key') | list is not contains('cilium_status')
  block:
    - name: Install Cilium
      changed_when: false
      vars:
        # yamllint disable-line rule:line-length
        version: "{{ (cilium_version | default((lookup('url', 'https://api.github.com/repos/cilium/cilium/releases/latest') | from_json).tag_name)) | regex_replace('^v?(([0-9]+)\\\
          .([0-9]+)\\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+[0-9A-Za-z-]+)?)$', '\\1') }}"
      # yamllint disable-line rule:line-length
      ansible.builtin.command: cilium install --version {{ version }} --set KubeProxyReplacement=true --set k8sServiceHost={{ apiserver_endpoint }} --set k8sServicePort=6443

    - name: Reboot
      become: true
      ansible.builtin.reboot:

- name: Wait Node Ready
  failed_when: false
  kubernetes.core.k8s_info:
    kind: Node
  register: node_info
  until: node_info.resources is defined and node_info | json_query('resources[0].status.conditions[?type==`Ready`].status | [0]') == 'True'
  retries: 60
  delay: 10
