- name: Collect Gather Facts
  ansible.builtin.gather_facts:
    gather_subset:
      - min

- name: Install Containerd for Debian/Ubuntu
  when: ansible_facts.distribution == "Debian" or ansible_facts.distribution == "Ubuntu"
  vars:
    dist: "{{ ansible_facts.distribution | lower }}"
  block:
    - name: Get Architecture
      changed_when: false
      ansible.builtin.command: dpkg --print-architecture
      register: arch

    - name: Add Repository Key
      become: true
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/{{ dist }}/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "644"
        force: true

    - name: Add Repository
      become: true
      ansible.builtin.apt_repository:
        # yamllint disable-line rule:line-length
        repo: deb [arch={{ arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ dist }} {{ ansible_facts.distribution_release
          | lower }} stable
        filename: docker
        state: present

    - name: Install Containerd
      become: true
      ansible.builtin.apt:
        update_cache: true
        install_recommends: false
        name: "{{ preparing_install_container_runtime_apt_packages }}"

- name: Create Containerd Config Directory
  become: true
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "775"

- name: Get Containerd Default Config
  changed_when: false
  ansible.builtin.command: containerd config default
  register: containerd_default_config

- name: Configure Containerd
  become: true
  ansible.builtin.copy:
    content: "{{ containerd_default_config.stdout_lines | join('\n') | regex_replace('SystemdCgroup = .*', 'SystemdCgroup = true') }}"
    dest: /etc/containerd/config.toml
    mode: "644"
  notify:
    - restart_containerd

- name: Append Docker Group to User
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    append: true
    groups: docker
