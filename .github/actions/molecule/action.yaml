name: Run Molecule
description: Run Molecule

inputs:
  vault-pass:
    description: "The Ansible Vault password"
    required: true
  private-key:
    description: "The private key to use for SSH connections"
    required: true

runs:
  using: composite
  steps:
    - name: Setup vagrant and libvirt
      shell: bash
      run: |
        curl -sSfL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt-get -qq update
        sudo apt-get -qq install -y --no-install-recommends bridge-utils clang dnsmasq kmod libguestfs-tools libvirt-clients libvirt-daemon-system libvirt-dev pkg-config qemu-kvm qemu-utils vagrant virt-manager
        sudo usermod -aG libvirt,kvm ${USER}
        vagrant plugin install vagrant-libvirt

    - name: Setup uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set uv path
      shell: bash
      run: echo "UV_PATH=$(which uv)" >> $GITHUB_ENV

    - name: uv sync
      shell: bash
      run: uv sync

    - name: Set Vault Password
      env:
        VAULT_PASS: ${{ inputs.vault-pass }}
      shell: bash
      run: echo "${VAULT_PASS}" > ${PWD}/vault_pass

    - name: Set encrypted private key
      env:
        PRIVATE_KEY: ${{ inputs.private-key }}
      shell: bash
      run: echo "${PRIVATE_KEY}" > ${PWD}/encrypted_key

    - name: molecule test
      shell: bash
      run: sudo -s -u ${USER} ANSIBLE_VAULT_PASSWORD_FILE="${PWD}/vault_pass" ${{ env.UV_PATH }} run molecule test
